import os
import random
from datetime import datetime
from fetch_facts import fetch_today_events
from script_writer import write_script
from render_pil import render_video
from uploader import upload_video

def slugify(s):
    return "".join(ch if ch.isalnum() else "-" for ch in s)[:50].strip("-")

def build_description(event, brand, script):
    credit = f"Sources: {event['source_url']}\n" \
             f"Some info may be from Wikipedia (CC BY-SA). " \
             f"Video auto-generated by {brand}."
    hashtags = "#shorts #facts #history #learn"
    return script + "\n\n" + credit + "\n\n" + hashtags

def main():
    brand = os.getenv("BRAND_NAME", "QuickShorts")
    privacy = os.getenv("YT_UPLOAD_PRIVACY", "public")
    n_videos = 3

    events = fetch_today_events(max_events=n_videos)
    for ev in events:
        script = write_script(ev)
        title = f"{ev['year']} • {ev['title']} — 20s history bite"
        filename = f"short-{slugify(ev['title'])}.mp4"
        path = os.path.join("/tmp", filename)
        render_video(script, brand_name=brand, outfile=path)
        desc = build_description(ev, brand, script)
        upload_video(path, title, desc, privacy_status=privacy)

if __name__ == "__main__":
    main()
